{"version":3,"file":"../../../../../../../../../../draw-canvas.js","sources":["draw-canvas.coffee"],"names":[],"mappings":"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","sourcesContent":["class DrawCanvas\r\n  # Canvas context\r\n  context = null\r\n\r\n  # Flag to set if is painting\r\n  paint = null\r\n\r\n  # canvas click positions\r\n  # [{ x: ?, y: ?, drag: ? }]\r\n  click = null\r\n\r\n  # Current color used\r\n  cursorColor: null\r\n\r\n  constructor: (@canvas) ->\r\n    @canvas = if typeof @canvas isnt typeof Object then document.getElementById @canvas else @canvas\r\n    this.setContext this.canvas.getContext '2d'\r\n    r = this.setPaint false\r\n      .setClick []\r\n      .setCursorColor this.colors.red\r\n      .redraw()\r\n      ._bindDrawEvents()\r\n\r\n  # Get the canvas context\r\n  getContext: ->\r\n    return this.context\r\n\r\n  # Set the canvas context\r\n  setContext: (context) ->\r\n    this.context = context\r\n    return this\r\n\r\n  # Get the paint option\r\n  getPaint: ->\r\n    return this.paint\r\n\r\n  # Set the paint option\r\n  setPaint: (paint) ->\r\n    this.paint = paint\r\n    return this\r\n\r\n  # Check if is painting\r\n  isPaint: ->\r\n    return if this.paint is true then true else false\r\n\r\n  # Set the selected cursor color\r\n  setCursorColor: (hexaCursorColor) ->\r\n    this.cursorColor = hexaCursorColor\r\n    return this\r\n\r\n  # Get the selected cursor color\r\n  getCursorColor: ->\r\n    return this.cursorColor\r\n\r\n  # Set the cursor line width\r\n  setLineWidth: (lineWidth) ->\r\n    this.lineWidth = lineWidth\r\n    return this\r\n\r\n  # Get the cursor line width\r\n  getLineWidth: ->\r\n    return this.lineWidth\r\n\r\n  # Add a click position\r\n  addClick: (mouseX, mouseY, isDrag) ->\r\n    this.click.push\r\n      mouseX: mouseX\r\n      mouseY: mouseY\r\n      isDrag: if isDrag is true then true else false\r\n      cursorColor: this.getCursorColor()\r\n      lineWidth: this.getLineWidth()\r\n\r\n    return this\r\n\r\n  # Get all click coordinates\r\n  getClick: ->\r\n    return this.click\r\n\r\n  # Set all click coordinates\r\n  setClick: (click) ->\r\n    this.click = click\r\n    return this\r\n\r\n  redraw: ->\r\n    context = this.context\r\n\r\n    # Clears the canvas\r\n    this.context.clearRect 0, 0, this.canvas.width, this.canvas.height\r\n\r\n    context.lineJoin = \"round\"\r\n    # context.lineWidth = 2.5\r\n\r\n    # List of clicks\r\n    clickStack = this.getClick()\r\n\r\n    for clickCoord, idx in clickStack\r\n      context.beginPath()\r\n\r\n      if clickCoord.isDrag is true and typeof clickStack[idx] isnt typeof undefined\r\n        prevClickStack = clickStack[idx-1]\r\n        context.moveTo prevClickStack.mouseX, prevClickStack.mouseY\r\n      else\r\n        context.moveTo clickCoord.mouseX - 1, clickCoord.mouseY\r\n\r\n      context.lineTo clickCoord.mouseX, clickCoord.mouseY\r\n      context.strokeStyle = clickCoord.cursorColor\r\n      context.lineWidth = clickCoord.lineWidth\r\n      context.stroke()\r\n      context.closePath()\r\n\r\n    return this\r\n\r\n  # Bind click events\r\n  _bindDrawEvents: ->\r\n    this.canvas.addEventListener 'mousedown', this.mouseDrawHandlerFactory()\r\n    this.canvas.addEventListener 'mousemove', this.mouseDrawHandlerFactory()\r\n    this.canvas.addEventListener 'mouseup', this.mouseDrawStopHandlerFactory()\r\n    this.canvas.addEventListener 'mouseleave', this.mouseDrawStopHandlerFactory()\r\n    return this\r\n\r\n  # Inject variables into event listener\r\n  # and add the mouse position when event is fired\r\n  mouseDrawHandlerFactory: ->\r\n    drawCanvas = this\r\n    return (e) ->\r\n      isDrag = null\r\n\r\n      if e.type is 'mousedown'\r\n        drawCanvas.setPaint true\r\n        isDrag = false\r\n      else if e.type is 'mousemove' and drawCanvas.isPaint() is true\r\n        isDrag = true\r\n\r\n      if isDrag isnt null\r\n        mouseX = e.pageX - this.offsetLeft\r\n        mouseY = e.pageY - this.offsetTop\r\n        drawCanvas.addClick mouseX, mouseY, isDrag\r\n        drawCanvas.redraw()\r\n\r\n  # Inject variables into event listener\r\n  # and set to false paint option when event is fired\r\n  mouseDrawStopHandlerFactory: ->\r\n    drawCanvas = this\r\n    return (e) ->\r\n      drawCanvas.setPaint false\r\n\r\n  clearCanvas: ->\r\n    this.context.clearRect 0, 0, this.canvas.width, this.canvas.height\r\n    this.setClick []\r\n\r\n  saveCanvas: ->\r\n    window.open this.canvas.toDataURL()\r\n\r\n  colors:\r\n    red: '#F44336'\r\n    pink: '#E91E63'\r\n    purple: '#9C27B0'\r\n    deep_purple: '#673AB7'\r\n    indigo: '#3F51B5'\r\n    blue: '#2196F3'\r\n    light_blue: '#03A9F4'\r\n    cyan: '#00BCD4'\r\n    teal: '#009688'\r\n    green: '#4CAF50'\r\n    light_green: '#8BC34A'\r\n    lime: '#CDDC39'\r\n    yellow: '#FFEB3B'\r\n    amber: '#FFC107'\r\n    orange: '#FF9800'\r\n    deep_orange: '#FF5722'\r\n    brown: '#795548'\r\n    grey: '#9E9E9E'\r\n    blue_grey: '#607D8B'\r\n\r\n\r\n\r\n"]}